import asyncio
from sqlalchemy import text
from database import engine


async def main():
    """
    –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    –í–∫–ª—é—á–∞–µ—Ç –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –º–∏–≥—Ä–∞—Ü–∏–π:
    - migration_add_utm.py
    - migration_create_admin_users.py
    - migration_add_receipt_address.py
    - migration_add_receipt_columns.py
    - migration_add_promocode_id.py
    """
    async with engine.begin() as conn:
        print("–ù–∞—á–∏–Ω–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏...")

        # 1. –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É utm –≤ —Ç–∞–±–ª–∏—Ü—É users
        print("1. –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É utm –≤ —Ç–∞–±–ª–∏—Ü—É users...")
        await conn.execute(
            text("ALTER TABLE users ADD COLUMN IF NOT EXISTS utm VARCHAR(200)")
        )
        print("‚úì –ö–æ–ª–æ–Ω–∫–∞ 'utm' –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü—É 'users'")

        # 2. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É admin_users
        print("2. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É admin_users...")
        await conn.execute(
            text(
                """
                CREATE TABLE IF NOT EXISTS admin_users (
                    id SERIAL PRIMARY KEY,
                    username VARCHAR(50) UNIQUE NOT NULL,
                    password_hash VARCHAR(128) NOT NULL,
                    created_at TIMESTAMP DEFAULT now()
                )
                """
            )
        )
        print("‚úì –¢–∞–±–ª–∏—Ü–∞ 'admin_users' —Å–æ–∑–¥–∞–Ω–∞")

        # 3. –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É address –≤ —Ç–∞–±–ª–∏—Ü—É receipts
        print("3. –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É address –≤ —Ç–∞–±–ª–∏—Ü—É receipts...")
        await conn.execute(
            text("ALTER TABLE receipts ADD COLUMN IF NOT EXISTS address TEXT")
        )
        print("‚úì –ö–æ–ª–æ–Ω–∫–∞ 'address' –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü—É 'receipts'")

        # 4. –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫–∏ aisida_items –∏ raw_api_response –≤ —Ç–∞–±–ª–∏—Ü—É receipts
        print(
            "4. –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫–∏ aisida_items –∏ raw_api_response –≤ —Ç–∞–±–ª–∏—Ü—É receipts..."
        )
        await conn.execute(
            text("ALTER TABLE receipts ADD COLUMN IF NOT EXISTS aisida_items TEXT")
        )
        await conn.execute(
            text("ALTER TABLE receipts ADD COLUMN IF NOT EXISTS raw_api_response TEXT")
        )
        print(
            "‚úì –ö–æ–ª–æ–Ω–∫–∏ 'aisida_items' –∏ 'raw_api_response' –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü—É 'receipts'"
        )

        # 5. –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É promocode_id –≤ —Ç–∞–±–ª–∏—Ü—É prizes –∏ –≤–Ω–µ—à–Ω–∏–π –∫–ª—é—á
        print("5. –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É promocode_id –≤ —Ç–∞–±–ª–∏—Ü—É prizes...")
        await conn.execute(
            text("ALTER TABLE prizes ADD COLUMN IF NOT EXISTS promocode_id INTEGER")
        )

        # –î–æ–±–∞–≤–ª—è–µ–º –≤–Ω–µ—à–Ω–∏–π –∫–ª—é—á –Ω–∞ —Ç–∞–±–ª–∏—Ü—É promocodes
        print("6. –î–æ–±–∞–≤–ª—è–µ–º –≤–Ω–µ—à–Ω–∏–π –∫–ª—é—á –¥–ª—è promocode_id...")
        try:
            await conn.execute(
                text(
                    "ALTER TABLE prizes ADD CONSTRAINT fk_prizes_promocode_id FOREIGN KEY (promocode_id) REFERENCES promocodes(id)"
                )
            )
            print("‚úì –í–Ω–µ—à–Ω–∏–π –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω")
        except Exception as e:
            print(
                f"‚ö† –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –≤–Ω–µ—à–Ω–∏–π –∫–ª—é—á (–≤–æ–∑–º–æ–∂–Ω–æ, —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç): {e}"
            )

        print("‚úì –ö–æ–ª–æ–Ω–∫–∞ 'promocode_id' –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü—É 'prizes'")

        print("\nüéâ –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!")
        print("–í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –º–∏–≥—Ä–∞—Ü–∏–π –ø—Ä–∏–º–µ–Ω–µ–Ω—ã.")


if __name__ == "__main__":
    asyncio.run(main())
