from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder
from sqlalchemy.ext.asyncio import AsyncSession
from models.user_model import User
from logger import logger
from sqlalchemy import select
from models.promo_setting_model import PromoSetting

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –±–∞–∑–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥
router = Router()


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
def get_main_menu_keyboard():
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    """
    builder = InlineKeyboardBuilder()
    builder.button(text="1. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∫—É–ø–∫—É", callback_data="register_receipt")
    builder.button(text="2. –ú–æ–∏ —á–µ–∫–∏", callback_data="my_receipts")
    builder.button(text="3. –û –ø—Ä–æ–¥—É–∫—Ü–∏–∏ ¬´–ê–π—Å–∏–¥–∞¬ª", callback_data="about_aisida")
    builder.button(text="4. –†–æ–∑—ã–≥—Ä—ã—à –ì–ª–∞–≤–Ω–æ–≥–æ –ø—Ä–∏–∑–∞", callback_data="weekly_lottery")
    builder.button(text="5. –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã", callback_data="faq")
    builder.adjust(1)  # –ü–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Ä—è–¥—É
    return builder.as_markup()


def get_start_keyboard():
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start
    """
    builder = InlineKeyboardBuilder()
    builder.button(text="–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∫—É–ø–∫—É", callback_data="register_receipt")
    builder.button(text="–ú–µ–Ω—é", callback_data="main_menu")
    builder.adjust(2)
    return builder.as_markup()


@router.message(Command("start"))
async def cmd_start(message: Message, session: AsyncSession):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start
    """
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –∞–∫—Ü–∏–∏
    result = await session.execute(select(PromoSetting))
    setting = result.scalars().first()
    code = setting.code if setting else "–õ–ï–¢–û_–ö–†–ê–°–û–¢–´"
    # –¢–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∞–∫—Ü–∏–∏
    message_text = (
        "<b>–í–∞—à–∞ —Å–∫–∏–¥–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ:</b>\n"
        f"‚Ä¢ {setting.discount_single} ‚ÇΩ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ <b>1</b> —Å—Ä–µ–¥—Å—Ç–≤–∞ ¬´–ê–π—Å–∏–¥–∞¬ª\n"
        f"‚Ä¢ {setting.discount_multi} ‚ÇΩ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ <b>2 –∏ –±–æ–ª–µ–µ</b> —Å—Ä–µ–¥—Å—Ç–≤ ¬´–ê–π—Å–∏–¥–∞¬ª\n\n"
        f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–æ–º–æ-–∫–æ–¥ <b>{code}</b> –ø—Ä–∏ –∑–∞–∫–∞–∑–µ —Ç–æ–≤–∞—Ä–∞:\n"
        '‚Ä¢ –Ω–∞ —Å–∞–π—Ç–µ <a href="https://planetazdorovo.ru/search/?sort=sort&q=%D0%90%D0%B9%D1%81%D0%B8%D0%B4%D0%B0&appointments=&is_favorite_store=&product_price_min=148&product_price_max=1089&brand%5B%5D=1322&set_filter=Y">¬´–ü–ª–∞–Ω–µ—Ç–∞ –ó–¥–æ—Ä–æ–≤—å—è¬ª</a>\n\n'
        "<i>* –°–∫–∏–¥–∫–∞ –ø–æ –ø—Ä–æ–º–æ-–∫–æ–¥—É –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è —Å—Ä–∞–∑—É –≤ –º–æ–º–µ–Ω—Ç –ø–æ–∫—É–ø–∫–∏.*</i>\n\n"
        f"–ü–æ–ª—É—á–∏—Ç–µ –±–µ—Ä–µ–∂–Ω—ã–π —É—Ö–æ–¥ –∑–∞ –∫–æ–∂–µ–π –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π —Ü–µ–Ω–µ —Å –ø—Ä–æ–º–æ-–∫–æ–¥–æ–º <b>{code}</b> –∏ —É—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–º —Ä–æ–∑—ã–≥—Ä—ã—à–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ <b>OZON –Ω–∞ 5 000 ‚ÇΩ</b>!\n\n"
        "<b>–ö–∞–∫ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–º —Ä–æ–∑—ã–≥—Ä—ã—à–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ OZON –Ω–∞ 5 000 ‚ÇΩ:</b>\n"
        "1. –ü–æ—Å–ª–µ –≤—ã–∫—É–ø–∞ —Ç–æ–≤–∞—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ –≤ –º–µ–Ω—é <b>¬´–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∫—É–ø–∫—É¬ª</b>.\n"
        "2. –°—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É–π—Ç–µ —á–µ–∫ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ —á–µ–∫–∞ –≤—Ä—É—á–Ω—É—é.\n"
        "3. –í—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ø–∞–¥—ë—Ç–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ OZON –Ω–∞ <b>5 000 ‚ÇΩ</b>, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ—Ö–æ–¥–∏—Ç <b>–∫–∞–∂–¥—ã–π –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫</b>.\n\n"
        "<b>–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å?</b>\n"
        "–ù–∞–∂–º–∏—Ç–µ <b>¬´–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∫—É–ø–∫—É¬ª</b> –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ <b>¬´–ú–µ–Ω—é¬ª</b>, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ."
    )
    await message.answer(message_text, reply_markup=get_start_keyboard())


@router.message(Command("help"))
async def cmd_help(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /help
    """
    help_text = (
        "üìã <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n\n"
        "/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –ø–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
        "/menu - –ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n\n"
        "<b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:</b>\n"
        "1. –í—ã–±–µ—Ä–∏—Ç–µ '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∫—É–ø–∫—É' –≤ –º–µ–Ω—é\n"
        "2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —á–µ–∫–∞ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤—Ä—É—á–Ω—É—é\n"
        "3. –î–æ–∂–¥–∏—Ç–µ—Å—å –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–µ–∫–∞\n"
        "4. –ü–æ–ª—É—á–∏—Ç–µ –ø–æ–¥–∞—Ä–æ–∫ –∑–∞ –ø–æ–∫—É–ø–∫—É\n\n"
        "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –≤—ã–±–µ—Ä–∏—Ç–µ '–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã' –≤ –º–µ–Ω—é."
    )
    await message.answer(help_text, parse_mode="HTML")


@router.message(Command("menu"))
async def cmd_menu(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /menu
    """
    await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=get_main_menu_keyboard())


@router.callback_query(F.data == "main_menu")
async def callback_main_menu(callback: CallbackQuery):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    """
    await callback.message.edit_text(
        "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=get_main_menu_keyboard()
    )
    await callback.answer()


@router.callback_query(F.data == "about_aisida")
async def callback_about_aisida(callback: CallbackQuery):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û –ø—Ä–æ–¥—É–∫—Ü–∏–∏ ¬´–ê–π—Å–∏–¥–∞¬ª"
    """
    about_text = (
        "<b>–û –ø—Ä–æ–¥—É–∫—Ü–∏–∏ ¬´–ê–π—Å–∏–¥–∞¬ª</b>\n\n"
        "–í –∞–∫—Ü–∏–∏ —É—á–∞—Å—Ç–≤—É—é—Ç —Å—Ä–µ–¥—Å—Ç–≤–∞ –ª–∏–Ω–µ–π–∫–∏ ¬´–ê–π—Å–∏–¥–∞¬ª, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –≤ –∞–ø—Ç–µ—á–Ω–æ–π —Å–µ—Ç–∏ ¬´–ü–ª–∞–Ω–µ—Ç–∞ –ó–¥–æ—Ä–æ–≤—å—è¬ª.\n\n"
        "<b>1. –ü–µ–Ω–∫–∞ –¥–ª—è —É–º—ã–≤–∞–Ω–∏—è ¬´–ê–π—Å–∏–¥–∞¬ª</b>\n"
        "–ú—è–≥–∫–æ –æ—á–∏—â–∞–µ—Ç —Å—É—Ö—É—é –∏ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—É—é –∫–æ–∂—É, –Ω–µ –Ω–∞—Ä—É—à–∞—è –µ—ë –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –≥–∏–¥—Ä–æ–±–∞–ª–∞–Ω—Å. –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –¥–ª–∏—Ç–µ–ª—å–Ω–æ–µ —É–≤–ª–∞–∂–Ω–µ–Ω–∏–µ –∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –±–∞—Ä—å–µ—Ä–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –∑–∞ —Å—á—ë—Ç –∫–æ–º–ø–ª–µ–∫—Å–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —ç–∫—Å—Ç—Ä–∞–∫—Ç–æ–≤ –∏ –ê–°–î. –ò–¥–µ–∞–ª—å–Ω–∞ –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ —É—Ö–æ–¥–∞ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫–æ–∂–∏ –∫ –¥–∞–ª—å–Ω–µ–π—à–∏–º —ç—Ç–∞–ø–∞–º —É—Ö–æ–¥–∞.\n"
        "üîó –ü–æ–¥—Ä–æ–±–Ω–µ–µ: https://avzpharm.ru/ajsida/katalog/#penka\n\n"
        "<b>2. –ö—Ä–µ–º –¥–ª—è —Å—É—Ö–æ–π –∏ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–π –∫–æ–∂–∏ –ª–∏—Ü–∞ –∏ —Ç–µ–ª–∞ ¬´–ê–π—Å–∏–¥–∞¬ª (50 –º–ª) –∏–ª–∏ (250 –º–ª)</b>\n"
        "–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ –ø–∏—Ç–∞–µ—Ç –∏ —É–≤–ª–∞–∂–Ω—è–µ—Ç, —É—Å—Ç—Ä–∞–Ω—è–µ—Ç –ø–æ–∫—Ä–∞—Å–Ω–µ–Ω–∏—è –∏ —Ä–∞–∑–¥—Ä–∞–∂–µ–Ω–∏–µ –±–ª–∞–≥–æ–¥–∞—Ä—è 98 % –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º —Å –º–∞—Å–ª–∞–º–∏ –ª–∏–ø—ã, –ª–∞–≤–∞–Ω–¥—ã –∏ –ê–°–î. –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≥–∏–¥—Ä–æ–ª–∏–ø–∏–¥–Ω—ã–π –±–∞–ª–∞–Ω—Å –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—â—É—â–µ–Ω–∏–µ –∫–æ–º—Ñ–æ—Ä—Ç–∞ –¥–∞–∂–µ –ø–æ—Å–ª–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã—Ö –ø—Ä–æ—Ü–µ–¥—É—Ä. –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —É—Ç—Ä–æ–º –∏ –≤–µ—á–µ—Ä–æ–º.\n"
        "üîó –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫—Ä–µ–º–µ: https://avzpharm.ru/ajsida/katalog/#cream-face-body\n\n"
        "<b>3. –ö—Ä–µ–º –¥–ª—è –∂–∏—Ä–Ω–æ–π –∏ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∫–æ–∂–∏ –ª–∏—Ü–∞ –∏ —Ç–µ–ª–∞ ¬´–ê–π—Å–∏–¥–∞¬ª (50 –º–ª)</b>\n"
        "–ù–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç –≥–∏–¥—Ä–æ–ª–∏–ø–∏–¥–Ω—ã–π –±–∞–ª–∞–Ω—Å –∏ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤—É–µ—Ç –ø–æ—è–≤–ª–µ–Ω–∏—é –Ω–µ—Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤ –±–ª–∞–≥–æ–¥–∞—Ä—è –ê–°–î, –º–∞—Å–ª—É —Å–ª–∞–¥–∫–æ–≥–æ –º–∏–Ω–¥–∞–ª—è –∏ —ç–∫—Å—Ç—Ä–∞–∫—Ç–∞–º –æ–≤—Å–∞ –∏ –≤–∞—Å–∏–ª—å–∫–∞. –û–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ—Ç–∏–≤–æ–≤–æ—Å–ø–∞–ª–∏—Ç–µ–ª—å–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ, —É—Å–∫–æ—Ä—è–µ—Ç –∑–∞–∂–∏–≤–ª–µ–Ω–∏–µ –±–µ–∑ —Ä—É–±—Ü–æ–≤ –∏ –ø–æ–º–æ–≥–∞–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å–∞–ª—å–Ω—ã—Ö –∂–µ–ª—ë–∑. –§–æ—Ä–º—É–ª–∞ –Ω–∞ 97 % –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–∞, –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –≥–æ—Ä–º–æ–Ω–æ–≤, –ø–∞—Ä–∞–±–µ–Ω–æ–≤, —Å–∏–Ω—Ç–µ—Ç–∏—á–µ—Å–∫–∏—Ö –∫—Ä–∞—Å–∏—Ç–µ–ª–µ–π –∏ —Å–∏–ª–∏–∫–æ–Ω–æ–≤.\n"
        "üîó –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫—Ä–µ–º–µ: https://avzpharm.ru/ajsida/katalog/krem-dlya-zhirnoj-i-kombinirovannoj-kozhi/\n\n"
        "<b>4. –®–∞–º–ø—É–Ω—å ¬´–ê–π—Å–∏–¥–∞¬ª —Å –ê–°–î –¥–ª—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –≤–æ–ª–æ—Å (250 –º–ª)</b>\n"
        "–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —É—Å—Ç—Ä–∞–Ω—è–µ—Ç –∑—É–¥ –∏ —à–µ–ª—É—à–µ–Ω–∏–µ, —É–∫—Ä–µ–ø–ª—è–µ—Ç –∫–æ—Ä–Ω–∏ –∏ –∑–∞—â–∏—â–∞–µ—Ç –æ—Ç –ø–µ—Ä—Ö–æ—Ç–∏ –±–µ–∑ –ø–∞—Ä–∞–±–µ–Ω–æ–≤ –∏ –æ—Ç–¥—É—à–µ–∫. –õ–∏–ø–æ—Å–æ–º–∞–ª—å–Ω–∞—è —Ñ–æ—Ä–º–∞ –ê–°–î –≥–ª—É–±–æ–∫–æ –ø—Ä–æ–Ω–∏–∫–∞–µ—Ç –≤ –∫–æ–∂—É –≥–æ–ª–æ–≤—ã, –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—è –µ—ë –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –±–∞–ª–∞–Ω—Å. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è –ª—é–¥–µ–π, —Å—Ç—Ä–∞–¥–∞—é—â–∏—Ö —Å–µ–±–æ—Ä–µ–µ–π, –≤—ã–ø–∞–¥–µ–Ω–∏–µ–º –≤–æ–ª–æ—Å –∏ –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏.\n"
        "üîó –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ —à–∞–º–ø—É–Ω–µ: https://avzpharm.ru/ajsida/katalog/#shampoo\n\n"
        "<b>5. –ë–∞–ª—å–∑–∞–º-–º–∞—Å–∫–∞ –¥–ª—è —Å—É—Ö–æ–π –∫–æ–∂–∏ –≥–æ–ª–æ–≤—ã ¬´–ê–π—Å–∏–¥–∞¬ª (250 –º–ª)</b>\n"
        "–ò–¥–µ–∞–ª—å–Ω—ã–π –∫–æ–º–ø–∞–Ω—å–æ–Ω –∫ —à–∞–º–ø—É–Ω—é ¬´–ê–π—Å–∏–¥–∞¬ª –ø—Ä–∏ —Å–µ–±–æ—Ä–µ–π–Ω–æ–º –¥–µ—Ä–º–∞—Ç–∏—Ç–µ, –ø—Å–æ—Ä–∏–∞–∑–µ –∫–æ–∂–∏ –≥–æ–ª–æ–≤—ã, –∞ —Ç–∞–∫–∂–µ –ø—Ä–∏ –æ–±—ã—á–Ω–æ–π —Å—É—Ö–æ—Å—Ç–∏ –∏ —à–µ–ª—É—à–µ–Ω–∏–∏. –í —Å–æ—Å—Ç–∞–≤–µ 98 % –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤, –≤–∫–ª—é—á–∞—è –º–∞—Å–ª–∞ —Ä–µ–ø–µ–π–Ω–∏–∫–∞ –∏ –æ–ª–∏–≤—ã, –ê–°–î –∏ —ç—Ñ–∏—Ä–Ω—ã–µ –º–∞—Å–ª–∞ –ª–∞–≤–∞–Ω–¥—ã –∏ –ª–∏–º–æ–Ω–Ω–∏–∫–∞, —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —É—Å–ø–æ–∫–∞–∏–≤–∞—Ç—å —Ä–∞–∑–¥—Ä–∞–∂—ë–Ω–Ω—É—é –∫–æ–∂—É, –≥–ª—É–±–æ–∫–æ –µ—ë –ø–∏—Ç–∞—Ç—å –∏ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—é –ø–µ—Ä—Ö–æ—Ç–∏. –ü—Ä–∏ —Å–æ—á–µ—Ç–∞–Ω–∏–∏ —Å –ø—Ä–æ—Ç–∏–≤–æ–≥—Ä–∏–±–∫–æ–≤—ã—Ö —à–∞–º–ø—É–Ω—è–º–∏ (–∫–µ—Ç–æ–∫–æ–Ω–∞–∑–æ–ª) –±–∞–ª—å–∑–∞–º-–º–∞—Å–∫–∞ —É—Å–∏–ª–∏–≤–∞–µ—Ç –∏—Ö —Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–∏–π —ç—Ñ—Ñ–µ–∫—Ç –∏ –ø–æ–º–æ–≥–∞–µ—Ç —É—Å–∫–æ—Ä–∏—Ç—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ.\n"
        "üîó –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –±–∞–ª—å–∑–∞–º-–º–∞—Å–∫–µ: https://avzpharm.ru/ajsida/katalog/#balm-mask\n\n"
        "<b>6. –ö—Ä–µ–º –¥–ª—è –Ω–æ–≥ ¬´–ê–π—Å–∏–¥–∞¬ª —Å –ê–°–î –∏ –º–æ—á–µ–≤–∏–Ω–æ–π 30 % (50 –º–ª)</b>\n"
        "–°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è —Ñ–æ—Ä–º—É–ª–∞ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ —É–≤–ª–∞–∂–Ω—è–µ—Ç –∏ —Å–º—è–≥—á–∞–µ—Ç –≥—Ä—É–±—É—é –∏ —É—Ç–æ–ª—â—ë–Ω–Ω—É—é –∫–æ–∂—É —Å—Ç–æ–ø, –¥–µ–ª–∏–∫–∞—Ç–Ω–æ –æ—Ç—à–µ–ª—É—à–∏–≤–∞—è –Ω–∞—Ç–æ–ø—Ç—ã—à–∏ –∏ –º–æ–∑–æ–ª–∏. –°–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç –∑–∞–∂–∏–≤–ª–µ–Ω–∏—é –º–∏–∫—Ä–æ—Ç—Ä–∞–≤–º –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é –≥–∏–¥—Ä–æ–ª–∏–ø–∏–¥–Ω–æ–≥–æ —Å–ª–æ—è –±–ª–∞–≥–æ–¥–∞—Ä—è —Å–æ—á–µ—Ç–∞–Ω–∏—é –º–æ—á–µ–≤–∏–Ω—ã –∏ –ê–°–î. –õ—ë–≥–∫–∞—è —Ç–µ–∫—Å—Ç—É—Ä–∞ –±—ã—Å—Ç—Ä–æ –≤–ø–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∏ –Ω–µ –æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å–ª–µ–¥–æ–≤.\n"
        "üîó –ü–æ–¥—Ä–æ–±–Ω–µ–µ: https://avzpharm.ru/ajsida/katalog/#foot-cream\n\n"
        "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é, –Ω–∞–∂–º–∏—Ç–µ ¬´–ú–µ–Ω—é¬ª.\n"
    )

    builder = InlineKeyboardBuilder()
    builder.button(text="–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="main_menu")

    await callback.message.edit_text(
        about_text, reply_markup=builder.as_markup(), parse_mode="HTML"
    )
    await callback.answer()


@router.callback_query(F.data == "faq")
async def callback_faq(callback: CallbackQuery):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã"
    """
    faq_text = (
        "<b>–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã</b>\n\n"
        "1. <b>–ö–∞–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —á–µ–∫?</b>\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ <b>¬´–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∫—É–ø–∫—É¬ª</b> –≤ –º–µ–Ω—é, –∑–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —á–µ–∫–∞ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤—Ä—É—á–Ω—É—é.\n\n"
        "2. <b>–ö–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –Ω—É–∂–Ω—ã –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —á–µ–∫–∞?</b>\n"
        "–§–ù (—Ñ–∏—Å–∫–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä), –§–î (—Ñ–∏—Å–∫–∞–ª—å–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç), –§–ü–î (—Ñ–∏—Å–∫–∞–ª—å–Ω—ã–π –ø—Ä–∏–∑–Ω–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞) –∏ —Å—É–º–º–∞ –ø–æ–∫—É–ø–∫–∏.\n\n"
        "3. <b>–ü–æ—á–µ–º—É –º–æ–π —á–µ–∫ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞—ë—Ç—Å—è?</b>\n"
        "‚Äì –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –±–µ–∑ –±–ª–∏–∫–æ–≤, –ø—Ä–∏ —Ö–æ—Ä–æ—à–µ–º –æ—Å–≤–µ—â–µ–Ω–∏–∏.\n"
        "‚Äì –ï—Å–ª–∏ –Ω–µ –≤—ã—Ö–æ–¥–∏—Ç ‚Äî –≤–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ —á–µ–∫–∞ –≤—Ä—É—á–Ω—É—é.\n\n"
        "4. <b>–ö–∞–∫ —É–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç—É—Å —á–µ–∫–∞?</b>\n"
        "‚Äì ¬´–ü–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω ‚úÖ¬ª –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ —Ä–∞–∑–¥–µ–ª–µ ¬´–ú–æ–∏ —á–µ–∫–∏¬ª.\n"
        "‚Äì ¬´–û–∂–∏–¥–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏¬ª –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –±–æ—Ç –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —É –§–ù–°.\n\n"
        "5. <b>–ü–æ—á–µ–º—É —á–µ–∫ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç–∫–ª–æ–Ω—ë–Ω?</b>\n"
        "‚Äì –í–µ—Ä–æ—è—Ç–Ω–µ–µ –≤—Å–µ–≥–æ, —Å—É–º–º–∞ –∏–ª–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –Ω–µ —Å–æ–≤–ø–∞–ª–∏ —Å –¥–∞–Ω–Ω—ã–º–∏ –§–ù–°. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞.\n\n"
        "6. <b>–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥?</b>\n"
        "‚Äì –ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –µ–≥–æ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞ –Ω–∞ —Å–∞–π—Ç–µ ¬´–ü–ª–∞–Ω–µ—Ç–∞ –ó–¥–æ—Ä–æ–≤—å—è¬ª.\n\n"
        "7. <b>–ì–¥–µ —É–∑–Ω–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –∞–∫—Ü–∏–∏?</b>\n"
        '–ü—Ä–∞–≤–∏–ª–∞ –∞–∫—Ü–∏–∏ —Ä–∞–∑–º–µ—â–µ–Ω—ã –Ω–∞ —Å–∞–π—Ç–µ <a href="https://avzpharm.ru/">avzpharm.ru</a>'
    )
    builder = InlineKeyboardBuilder()
    builder.button(text="–ú–µ–Ω—é", callback_data="main_menu")

    await callback.message.edit_text(
        faq_text, reply_markup=builder.as_markup(), parse_mode="HTML"
    )
    await callback.answer()


@router.message(Command("admin_stats"))
async def cmd_admin_stats(message: Message, session: AsyncSession):
    """
    –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —á–µ–∫–æ–≤
    """
    # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∞ (–º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å)
    admin_ids = [123456789]  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤

    if message.from_user.id not in admin_ids:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    try:
        from services.receipt_service import get_receipt_statistics

        # –ü–æ–ª—É—á–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = await get_receipt_statistics(session)

        if not stats["success"]:
            await message.answer(
                f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {stats.get('error')}"
            )
            return

        stats_text = (
            f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —á–µ–∫–æ–≤</b>\n\n"
            f"üìã –í—Å–µ–≥–æ —á–µ–∫–æ–≤: {stats['total']}\n"
            f"‚è≥ –û–∂–∏–¥–∞—é—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏: {stats['pending']}\n"
            f"‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ: {stats['verified']}\n"
            f"‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–æ: {stats['rejected']}\n"
        )

        await message.answer(stats_text, parse_mode="HTML")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ admin_stats: {str(e)}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")


@router.message(Command("admin_check_pending"))
async def cmd_admin_check_pending(message: Message, session: AsyncSession):
    """
    –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö –≤–∏—Å—è—â–∏—Ö —á–µ–∫–æ–≤
    """
    # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∞ (–º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å)
    admin_ids = [123456789]  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤

    if message.from_user.id not in admin_ids:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    try:
        from services.receipt_service import check_pending_receipts

        # –£–≤–µ–¥–æ–º–ª—è–µ–º –æ –Ω–∞—á–∞–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
        status_msg = await message.answer("üîÑ –ù–∞—á–∏–Ω–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É –≤—Å–µ—Ö –≤–∏—Å—è—â–∏—Ö —á–µ–∫–æ–≤...")

        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
        result = await check_pending_receipts(session)

        if not result["success"]:
            await status_msg.edit_text(
                f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —á–µ–∫–æ–≤: {result.get('error')}"
            )
            return

        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
        report_text = (
            f"‚úÖ <b>–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞</b>\n\n"
            f"üìã –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —á–µ–∫–æ–≤: {result['processed']}\n"
            f"‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ: {result['verified']}\n"
            f"‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–æ: {result['rejected']}\n"
        )

        await status_msg.edit_text(report_text, parse_mode="HTML")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ admin_check_pending: {str(e)}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤–∏—Å—è—â–∏—Ö —á–µ–∫–æ–≤.")


@router.message(Command("admin_test_status"))
async def cmd_admin_test_status(message: Message, session: AsyncSession):
    """
    –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —á–µ–∫–∞
    –§–æ—Ä–º–∞—Ç: /admin_test_status <receipt_id> <new_status>
    """
    # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∞ (–º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å)
    admin_ids = [123456789]  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤

    if message.from_user.id not in admin_ids:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    try:
        # –ü–∞—Ä—Å–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
        args = message.text.split()[1:]  # –£–±–∏—Ä–∞–µ–º —Å–∞–º—É –∫–æ–º–∞–Ω–¥—É

        if len(args) != 2:
            await message.answer(
                "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã.\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /admin_test_status <ID_—á–µ–∫–∞> <–Ω–æ–≤—ã–π_—Å—Ç–∞—Ç—É—Å>\n"
                "–ù–∞–ø—Ä–∏–º–µ—Ä: /admin_test_status 123 verified"
            )
            return

        receipt_id = int(args[0])
        new_status = args[1]

        if new_status not in ["pending", "verified", "rejected"]:
            await message.answer(
                "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Å—Ç–∞—Ç—É—Å. –î–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: pending, verified, rejected"
            )
            return

        from services.receipt_service import test_receipt_status_update

        # –£–≤–µ–¥–æ–º–ª—è–µ–º –æ –Ω–∞—á–∞–ª–µ —Ç–µ—Å—Ç–∞
        status_msg = await message.answer(
            f"üîÑ –¢–µ—Å—Ç–∏—Ä—É—é –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —á–µ–∫–∞ {receipt_id}..."
        )

        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
        result = await test_receipt_status_update(session, receipt_id, new_status)

        if not result["success"]:
            await status_msg.edit_text(
                f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {result.get('error')}"
            )
            return

        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
        report_text = (
            f"üß™ <b>–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞</b>\n\n"
            f"üìã –ß–µ–∫ ID: {receipt_id}\n"
            f"üîÑ –°—Ç–∞—Ä—ã–π —Å—Ç–∞—Ç—É—Å: {result['old_status']}\n"
            f"üéØ –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: {result['new_status']}\n"
            f"‚úÖ –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {result['final_status']}\n\n"
            f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {result['message']}"
        )

        await status_msg.edit_text(report_text, parse_mode="HTML")

    except ValueError:
        await message.answer("‚ùå ID —á–µ–∫–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ admin_test_status: {str(e)}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏.")


@router.message(Command("admin_check_receipt"))
async def cmd_admin_check_receipt(message: Message, session: AsyncSession):
    """
    –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —á–µ–∫–∞
    –§–æ—Ä–º–∞—Ç: /admin_check_receipt <receipt_id>
    """
    # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∞ (–º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å)
    admin_ids = [123456789]  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤

    if message.from_user.id not in admin_ids:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    try:
        # –ü–∞—Ä—Å–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
        args = message.text.split()[1:]  # –£–±–∏—Ä–∞–µ–º —Å–∞–º—É –∫–æ–º–∞–Ω–¥—É

        if len(args) != 1:
            await message.answer(
                "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã.\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /admin_check_receipt <ID_—á–µ–∫–∞>\n"
                "–ù–∞–ø—Ä–∏–º–µ—Ä: /admin_check_receipt 123"
            )
            return

        receipt_id = int(args[0])

        from services.receipt_service import verify_receipt_with_api
        from sqlalchemy import select
        from models.receipt_model import Receipt

        # –ü–æ–ª—É—á–∞–µ–º —á–µ–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        receipt_query = await session.execute(
            select(Receipt).where(Receipt.id == receipt_id)
        )
        receipt = receipt_query.scalars().first()

        if not receipt:
            await message.answer(f"‚ùå –ß–µ–∫ —Å ID {receipt_id} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–µ–∫–µ
        current_info = (
            f"üìã <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–µ–∫–µ {receipt_id}</b>\n\n"
            f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {receipt.user_id}\n"
            f"üí∞ –°—É–º–º–∞: {receipt.amount} ‚ÇΩ\n"
            f"üìÖ –°–æ–∑–¥–∞–Ω: {receipt.created_at.strftime('%d.%m.%Y %H:%M')}\n"
            f"üìä –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: <b>{receipt.status}</b>\n"
            f"üïê –î–∞—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {receipt.verification_date.strftime('%d.%m.%Y %H:%M') if receipt.verification_date else '–ù–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω'}\n"
            f"üì¶ –¢–æ–≤–∞—Ä–æ–≤ –ê–π—Å–∏–¥–∞: {receipt.items_count}\n"
            f"üè™ –ê–ø—Ç–µ–∫–∞: {receipt.pharmacy or '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}\n\n"
            f"üîÑ –ó–∞–ø—É—Å–∫–∞—é –ø–æ–≤—Ç–æ—Ä–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É..."
        )

        status_msg = await message.answer(current_info, parse_mode="HTML")

        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
        result = await verify_receipt_with_api(session, receipt_id)

        # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–µ–∫–µ
        await session.refresh(receipt)

        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
        if result["success"]:
            report_text = (
                f"‚úÖ <b>–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ</b>\n\n"
                f"üìã –ß–µ–∫ ID: {receipt_id}\n"
                f"üìä –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: <b>{receipt.status}</b>\n"
                f"üïê –ü—Ä–æ–≤–µ—Ä–µ–Ω: {receipt.verification_date.strftime('%d.%m.%Y %H:%M')}\n"
                f"üì¶ –¢–æ–≤–∞—Ä–æ–≤ –ê–π—Å–∏–¥–∞: {receipt.items_count}\n"
                f"üè™ –ê–ø—Ç–µ–∫–∞: {receipt.pharmacy or '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}"
            )
        else:
            report_text = (
                f"‚ùå <b>–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–æ–π</b>\n\n"
                f"üìã –ß–µ–∫ ID: {receipt_id}\n"
                f"üìä –°—Ç–∞—Ç—É—Å: <b>{receipt.status}</b>\n"
                f"‚ùå –û—à–∏–±–∫–∞: {result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}"
            )

        await status_msg.edit_text(report_text, parse_mode="HTML")

    except ValueError:
        await message.answer("‚ùå ID —á–µ–∫–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ admin_check_receipt: {str(e)}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —á–µ–∫–∞.")


def register_base_handlers() -> Router:
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –±–∞–∑–æ–≤—ã–µ —Ö–µ–Ω–¥–ª–µ—Ä—ã –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–æ—É—Ç–µ—Ä
    """
    return router
