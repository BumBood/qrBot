from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –±–∞–∑–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥
router = Router()


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
def get_main_menu_keyboard():
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    """
    builder = InlineKeyboardBuilder()
    builder.button(text="üîç –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∫—É–ø–∫—É", callback_data="register_receipt")
    builder.button(text="üì¶ –û –ø—Ä–æ–¥—É–∫—Ü–∏–∏ ¬´–ê–π—Å–∏–¥–∞¬ª", callback_data="about_aisida")
    builder.button(text="üìù –ú–æ–∏ —á–µ–∫–∏", callback_data="my_receipts")
    builder.button(text="üéÅ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π —Ä–æ–∑—ã–≥—Ä—ã—à OZON", callback_data="weekly_lottery")
    builder.button(text="üèÜ –†–æ–∑—ã–≥—Ä—ã—à –ì–ª–∞–≤–Ω–æ–≥–æ –ø—Ä–∏–∑–∞", callback_data="lottery")
    builder.button(text="‚ùì –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã", callback_data="faq")
    builder.adjust(1)  # –ü–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Ä—è–¥—É
    return builder.as_markup()


def get_start_keyboard():
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start
    """
    builder = InlineKeyboardBuilder()
    builder.button(text="üîç –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∫—É–ø–∫—É", callback_data="register_receipt")
    builder.button(text="–ú–µ–Ω—é", callback_data="main_menu")
    builder.adjust(1)
    return builder.as_markup()


@router.message(Command("start"))
async def cmd_start(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start
    """
    await message.answer(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –¥–ª—è —É—á–µ—Ç–∞ –ø–æ–∫—É–ø–æ–∫ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–µ–∫–æ–≤!\n\n"
        "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ –ø–æ–∫—É–ø–∫–∏, –ø—Ä–æ–≤–µ—Ä—è—Ç—å —á–µ–∫–∏ "
        "–∏ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –ø—Ä–∏–∑–æ–≤.",
        reply_markup=get_start_keyboard(),
    )


@router.message(Command("help"))
async def cmd_help(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /help
    """
    help_text = (
        "üìã <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n\n"
        "/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –ø–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
        "/menu - –ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n\n"
        "<b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:</b>\n"
        "1. –í—ã–±–µ—Ä–∏—Ç–µ '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∫—É–ø–∫—É' –≤ –º–µ–Ω—é\n"
        "2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —á–µ–∫–∞ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤—Ä—É—á–Ω—É—é\n"
        "3. –î–æ–∂–¥–∏—Ç–µ—Å—å –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–µ–∫–∞\n"
        "4. –ü–æ–ª—É—á–∏—Ç–µ –ø–æ–¥–∞—Ä–æ–∫ –∑–∞ –ø–æ–∫—É–ø–∫—É\n\n"
        "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –≤—ã–±–µ—Ä–∏—Ç–µ '–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã' –≤ –º–µ–Ω—é."
    )
    await message.answer(help_text, parse_mode="HTML")


@router.message(Command("menu"))
async def cmd_menu(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /menu
    """
    await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=get_main_menu_keyboard())


@router.callback_query(F.data == "main_menu")
async def callback_main_menu(callback: CallbackQuery):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    """
    await callback.message.edit_text(
        "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=get_main_menu_keyboard()
    )
    await callback.answer()


@router.callback_query(F.data == "about_aisida")
async def callback_about_aisida(callback: CallbackQuery):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û –ø—Ä–æ–¥—É–∫—Ü–∏–∏ ¬´–ê–π—Å–∏–¥–∞¬ª"
    """
    about_text = (
        "<b>–û –ø—Ä–æ–¥—É–∫—Ü–∏–∏ ¬´–ê–π—Å–∏–¥–∞¬ª</b>\n\n"
        "¬´–ê–π—Å–∏–¥–∞¬ª ‚Äî —ç—Ç–æ —Å–µ—Ä–∏—è –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤ –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è –≥–ª–∞–∑.\n\n"
        "–ù–∞—à–∏ –ø—Ä–æ–¥—É–∫—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø–µ—Ä–µ–¥–æ–≤—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π "
        "–∏ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∑–¥–æ—Ä–æ–≤—å—è –≥–ª–∞–∑ –∏ –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∏ "
        "—Ä–∞–∑–ª–∏—á–Ω—ã—Ö –æ—Ñ—Ç–∞–ª—å–º–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π.\n\n"
        "–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –Ω–∞—à–µ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏ –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º —Å–∞–π—Ç–µ."
    )

    builder = InlineKeyboardBuilder()
    builder.button(text="–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="main_menu")

    await callback.message.edit_text(
        about_text, reply_markup=builder.as_markup(), parse_mode="HTML"
    )
    await callback.answer()


@router.callback_query(F.data == "faq")
async def callback_faq(callback: CallbackQuery):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã"
    """
    faq_text = (
        "<b>–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã</b>\n\n"
        "<b>–ö–∞–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —á–µ–∫?</b>\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∫—É–ø–∫—É' –≤ –º–µ–Ω—é, –∑–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —á–µ–∫–∞ "
        "–∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤—Ä—É—á–Ω—É—é.\n\n"
        "<b>–ö–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –Ω—É–∂–Ω—ã –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —á–µ–∫–∞?</b>\n"
        "–§–ù (—Ñ–∏—Å–∫–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä), –§–î (—Ñ–∏—Å–∫–∞–ª—å–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç), –§–ü–î (—Ñ–∏—Å–∫–∞–ª—å–Ω—ã–π –ø—Ä–∏–∑–Ω–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞) "
        "–∏ —Å—É–º–º–∞ –ø–æ–∫—É–ø–∫–∏.\n\n"
        "<b>–ö–∞–∫ —É–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç—É—Å –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–µ–∫–∞?</b>\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ '–ú–æ–∏ —á–µ–∫–∏' –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.\n\n"
        "<b>–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫?</b>\n"
        "–ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–µ–∫–∞ –≤—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ª—É—á–∏—Ç–µ –ø–æ–¥–∞—Ä–æ–∫.\n\n"
        "<b>–ö–∞–∫ –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ?</b>\n"
        "–ö–∞–∂–¥—ã–π –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π —á–µ–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—á–∞—Å—Ç–≤—É–µ—Ç –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ."
    )

    builder = InlineKeyboardBuilder()
    builder.button(text="–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="main_menu")

    await callback.message.edit_text(
        faq_text, reply_markup=builder.as_markup(), parse_mode="HTML"
    )
    await callback.answer()


def register_base_handlers() -> Router:
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –±–∞–∑–æ–≤—ã–µ —Ö–µ–Ω–¥–ª–µ—Ä—ã –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–æ—É—Ç–µ—Ä
    """
    return router
