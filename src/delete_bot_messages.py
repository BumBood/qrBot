#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –±–æ—Ç–∞ –≤ –¥–∏–∞–ª–æ–≥–∞—Ö —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
"""
import asyncio
import sys
import os
from typing import List, Optional
from sqlalchemy import select
from sqlalchemy.ext.asyncio import AsyncSession

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
sys.path.append(os.path.join(os.path.dirname(__file__), "src"))

from aiogram import Bot
from aiogram.exceptions import (
    TelegramBadRequest,
    TelegramForbiddenError,
    TelegramNotFound,
)

from config import BOT_TOKEN
from database import engine
from models.user_model import User
from logger import logger


class MessageDeleter:
    """–ö–ª–∞—Å—Å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –±–æ—Ç–∞"""

    def __init__(self, bot_token: str):
        self.bot = Bot(token=bot_token)
        self.deleted_count = 0
        self.error_count = 0
        self.blocked_users: List[int] = []
        self.chat_not_found_count = 0

    async def get_all_users(self) -> List[User]:
        """–ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
        async with AsyncSession(engine) as session:
            result = await session.execute(select(User))
            users = result.scalars().all()
            logger.info(f"–ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ë–î: {len(users)}")
            return list(users)

    async def check_chat_availability(self, chat_id: int) -> bool:
        """
        –ë—ã—Å—Ç—Ä–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —á–∞—Ç–∞, –æ—Ç–ø—Ä–∞–≤–∏–≤ –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True –µ—Å–ª–∏ —á–∞—Ç –¥–æ—Å—Ç—É–ø–µ–Ω, False –µ—Å–ª–∏ –Ω–µ—Ç
        """
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
            await self.bot.get_chat(chat_id)
            return True
        except (TelegramForbiddenError, TelegramBadRequest) as e:
            error_text = str(e).lower()
            if "chat not found" in error_text:
                logger.debug(f"üí¨ –ß–∞—Ç {chat_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏")
                self.chat_not_found_count += 1
            elif "forbidden" in error_text:
                logger.debug(f"üö´ –ë–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {chat_id}")

            if chat_id not in self.blocked_users:
                self.blocked_users.append(chat_id)
            return False
        except Exception as e:
            logger.debug(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —á–∞—Ç–∞ {chat_id}: {e}")
            return True  # –î–∞–µ–º —à–∞–Ω—Å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è

    async def delete_message_safely(self, chat_id: int, message_id: int) -> bool:
        """–ë–µ–∑–æ–ø–∞—Å–Ω–æ —É–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫"""
        try:
            await self.bot.delete_message(chat_id=chat_id, message_id=message_id)
            self.deleted_count += 1
            logger.info(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ {message_id} –≤ —á–∞—Ç–µ {chat_id}")
            return True

        except TelegramNotFound:
            # –°–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ —É–¥–∞–ª–µ–Ω–æ –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
            logger.debug(f"‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ {message_id} –≤ —á–∞—Ç–µ {chat_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            return False

        except TelegramForbiddenError:
            # –ë–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
            logger.warning(f"üö´ –ë–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {chat_id}")
            self.blocked_users.append(chat_id)
            return False

        except TelegramBadRequest as e:
            # –†–∞–∑–ª–∏—á–Ω—ã–µ –æ—à–∏–±–∫–∏ (—Å–ª–∏—à–∫–æ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–µ—Ç –ø—Ä–∞–≤, —á–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –∏ —Ç.–¥.)
            error_text = str(e).lower()

            if "chat not found" in error_text:
                # –ß–∞—Ç —É–¥–∞–ª–µ–Ω –∏–ª–∏ –±–æ—Ç –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ —á–∞—Ç–∞
                logger.warning(f"üí¨ –ß–∞—Ç {chat_id} –Ω–µ –Ω–∞–π–¥–µ–Ω (—É–¥–∞–ª–µ–Ω –∏–ª–∏ –±–æ—Ç –∏—Å–∫–ª—é—á–µ–Ω)")
                self.chat_not_found_count += 1
                if chat_id not in self.blocked_users:
                    self.blocked_users.append(chat_id)
                return False
            elif "message to delete not found" in error_text:
                logger.debug(
                    f"‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ {message_id} –≤ —á–∞—Ç–µ {chat_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è"
                )
            elif "message can't be deleted" in error_text:
                logger.warning(
                    f"‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ {message_id} –≤ —á–∞—Ç–µ {chat_id} –Ω–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å (—Å–ª–∏—à–∫–æ–º —Å—Ç–∞—Ä–æ–µ)"
                )
            elif "user is deactivated" in error_text:
                logger.warning(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
                if chat_id not in self.blocked_users:
                    self.blocked_users.append(chat_id)
            else:
                logger.error(
                    f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è {message_id} –≤ —á–∞—Ç–µ {chat_id}: {e}"
                )
            self.error_count += 1
            return False

        except Exception as e:
            logger.error(
                f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è {message_id} –≤ —á–∞—Ç–µ {chat_id}: {e}"
            )
            self.error_count += 1
            return False

    async def delete_messages_by_ids(self, chat_id: int, message_ids: List[int]) -> int:
        """–£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ –∏—Ö ID"""
        deleted = 0

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —á–∞—Ç–∞ —Å –ø–µ—Ä–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
        if message_ids:
            first_check = await self.delete_message_safely(chat_id, message_ids[0])
            if not first_check and chat_id in self.blocked_users:
                # –ï—Å–ª–∏ —á–∞—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                logger.warning(f"‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id} (—á–∞—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)")
                return 0
            elif first_check:
                deleted += 1

        # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å –æ—Å—Ç–∞–ª—å–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
        for message_id in message_ids[1:]:
            if await self.delete_message_safely(chat_id, message_id):
                deleted += 1
            # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
            await asyncio.sleep(0.1)
        return deleted

    async def get_chat_info_and_display(self, chat_id: int) -> bool:
        """
        –ü–æ–ª—É—á–∞–µ—Ç –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ

        Args:
            chat_id: ID —á–∞—Ç–∞

        Returns:
            bool: True –µ—Å–ª–∏ —á–∞—Ç –¥–æ—Å—Ç—É–ø–µ–Ω, False –µ—Å–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
        """
        try:
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
            chat_info = await self.bot.get_chat(chat_id)

            print(f"\nüìã –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ß–ê–¢–ï:")
            print(f"üÜî ID —á–∞—Ç–∞: {chat_id}")
            print(f"üì± –¢–∏–ø —á–∞—Ç–∞: {chat_info.type}")

            if hasattr(chat_info, "first_name") and chat_info.first_name:
                print(f"üë§ –ò–º—è: {chat_info.first_name}")
            if hasattr(chat_info, "last_name") and chat_info.last_name:
                print(f"üë§ –§–∞–º–∏–ª–∏—è: {chat_info.last_name}")
            if hasattr(chat_info, "username") and chat_info.username:
                print(f"üë§ Username: @{chat_info.username}")
            if hasattr(chat_info, "bio") and chat_info.bio:
                print(f"üìù –ë–∏–æ: {chat_info.bio}")

            # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ (—Ç–æ–ª—å–∫–æ –¥–ª—è –≥—Ä—É–ø–ø/–∫–∞–Ω–∞–ª–æ–≤)
            if chat_info.type in ["group", "supergroup", "channel"]:
                try:
                    member_count = await self.bot.get_chat_member_count(chat_id)
                    print(f"üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ —á–∞—Ç–µ: {member_count:,}")
                except Exception as e:
                    logger.debug(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {e}")
            else:
                print(
                    "üí¨ –ü—Ä–∏–≤–∞—Ç–Ω—ã–π —á–∞—Ç (—Ç–æ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ —á–µ—Ä–µ–∑ Bot API)"
                )

            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞
            if hasattr(chat_info, "description") and chat_info.description:
                print(
                    f"üìÑ –û–ø–∏—Å–∞–Ω–∏–µ: {chat_info.description[:100]}{'...' if len(chat_info.description) > 100 else ''}"
                )

            print("-" * 50)
            return True

        except (TelegramForbiddenError, TelegramBadRequest) as e:
            error_text = str(e).lower()
            if "chat not found" in error_text:
                print(f"üí¨ –ß–∞—Ç {chat_id} –Ω–µ –Ω–∞–π–¥–µ–Ω (—É–¥–∞–ª–µ–Ω –∏–ª–∏ –±–æ—Ç –∏—Å–∫–ª—é—á–µ–Ω)")
                self.chat_not_found_count += 1
            elif "forbidden" in error_text:
                print(f"üö´ –ë–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {chat_id}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —á–∞—Ç—É {chat_id}: {e}")

            if chat_id not in self.blocked_users:
                self.blocked_users.append(chat_id)
            return False

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–∞—Ç–µ {chat_id}: {e}")
            logger.error(f"–û—à–∏–±–∫–∞ get_chat –¥–ª—è {chat_id}: {e}")
            return False

    async def delete_all_messages_for_user(
        self, chat_id: int, start_message_id: int = 1, end_message_id: int = 50000
    ) -> int:
        """
        –£–¥–∞–ª—è–µ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —É –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑ –ª–∏–º–∏—Ç–∞ –ø–æ–∏—Å–∫–∞

        Args:
            chat_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            start_message_id: –ù–∞—á–∞–ª—å–Ω—ã–π ID —Å–æ–æ–±—â–µ–Ω–∏—è
            end_message_id: –ö–æ–Ω–µ—á–Ω—ã–π ID —Å–æ–æ–±—â–µ–Ω–∏—è
        """
        deleted = 0
        attempts = 0

        logger.info(f"üéØ –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}")
        logger.info(f"üìç –î–∏–∞–ø–∞–∑–æ–Ω message_id: {start_message_id}-{end_message_id}")

        # –ü–æ–ª—É—á–∞–µ–º –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
        print(f"üìä –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–∞—Ç–µ {chat_id}...")
        if not await self.get_chat_info_and_display(chat_id):
            logger.warning(f"‚è≠Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            return 0

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å
        total_range = end_message_id - start_message_id + 1
        print(f"üéØ –ë—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {total_range:,}")
        print(f"üìç –î–∏–∞–ø–∞–∑–æ–Ω ID —Å–æ–æ–±—â–µ–Ω–∏–π: {start_message_id} - {end_message_id}")
        print(f"‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è –í–°–ï —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ (–Ω–µ —Ç–æ–ª—å–∫–æ –æ—Ç –±–æ—Ç–∞)")
        print("-" * 50)

        # –ü—Ä–æ–±—É–µ–º —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
        try:
            for message_id in range(end_message_id, start_message_id - 1, -1):
                attempts += 1

                if attempts % 500 == 0:  # –ü—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 500 –ø–æ–ø—ã—Ç–æ–∫
                    logger.info(
                        f"üìà –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {attempts} —Å–æ–æ–±—â–µ–Ω–∏–π, —É–¥–∞–ª–µ–Ω–æ: {deleted}"
                    )
                    logger.info(f"üìç –¢–µ–∫—É—â–∏–π message_id: {message_id}")

                try:
                    success = await self.delete_message_safely(chat_id, message_id)
                    if success:
                        deleted += 1
                        if deleted % 25 == 0:  # –õ–æ–≥–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–µ 25 —É–¥–∞–ª–µ–Ω–∏–π
                            logger.info(
                                f"‚úÖ –£–¥–∞–ª–µ–Ω–æ {deleted} —Å–æ–æ–±—â–µ–Ω–∏–π —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}"
                            )

                    # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏
                    await asyncio.sleep(0.03)  # –£–º–µ–Ω—å—à–µ–Ω–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ—Ç—ã

                except Exception as e:
                    logger.debug(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è {message_id}: {e}")
                    continue

        except KeyboardInterrupt:
            logger.warning(
                f"‚èπÔ∏è –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º. –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {attempts}, —É–¥–∞–ª–µ–Ω–æ: {deleted}"
            )

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–∞–∂–µ –ø—Ä–∏ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–∏
            total_range = end_message_id - start_message_id + 1
            progress_percent = (attempts / total_range) * 100 if total_range > 0 else 0

            print("\n" + "=" * 50)
            print("‚èπÔ∏è –û–ü–ï–†–ê–¶–ò–Ø –ü–†–ï–†–í–ê–ù–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ú")
            print("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ù–ê –ú–û–ú–ï–ù–¢ –ü–†–ï–†–´–í–ê–ù–ò–Ø:")
            print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –±–æ—Ç–∞: {deleted}")
            print(f"üìà –í—Å–µ–≥–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ message_id: {attempts:,}")
            print(f"üìä –ü—Ä–æ–≥—Ä–µ—Å—Å –ø—Ä–æ–≤–µ—Ä–∫–∏: {progress_percent:.1f}%")
            print("=" * 50)

            return deleted

        # –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        total_range = end_message_id - start_message_id + 1
        progress_percent = (attempts / total_range) * 100 if total_range > 0 else 0

        logger.info(
            f"üèÅ –ó–∞–≤–µ—Ä—à–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}. –£–¥–∞–ª–µ–Ω–æ: {deleted}, –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ: {attempts}"
        )

        print("\n" + "=" * 50)
        print("üèÅ –û–ü–ï–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!")
        print("üìä –§–ò–ù–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –±–æ—Ç–∞: {deleted}")
        print(f"üìà –í—Å–µ–≥–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ message_id: {attempts:,}")
        print(f"üìä –ü—Ä–æ–≥—Ä–µ—Å—Å –ø—Ä–æ–≤–µ—Ä–∫–∏: {progress_percent:.1f}%")
        if deleted > 0:
            efficiency = (deleted / attempts) * 100 if attempts > 0 else 0
            print(
                f"‚ö° –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —É–¥–∞–ª–µ–Ω–∏—è: {efficiency:.2f}% (–Ω–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –±–æ—Ç–∞)"
            )
        print("=" * 50)

        return deleted

    async def smart_delete_for_user(
        self,
        chat_id: int,
        iterations: int = 100,
        test_message: str = "üßπ –û—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞...",
    ) -> int:
        """
        –£–º–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π: –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, —É–¥–∞–ª—è–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∏ —Ç–µ–∫—É—â–µ–µ

        Args:
            chat_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            iterations: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Ç–µ—Ä–∞—Ü–∏–π —É–¥–∞–ª–µ–Ω–∏—è
            test_message: –¢–µ–∫—Å—Ç —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        """
        deleted = 0
        sent_messages = []

        logger.info(f"üß† –£–º–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}")
        logger.info(f"üîÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Ç–µ—Ä–∞—Ü–∏–π: {iterations}")

        # –ü–æ–ª—É—á–∞–µ–º –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
        print(f"üìä –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–∞—Ç–µ {chat_id}...")
        if not await self.get_chat_info_and_display(chat_id):
            logger.warning(f"‚è≠Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            return 0

        print(f"üß† –ù–∞—á–∏–Ω–∞–µ–º —É–º–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π:")
        print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: '{test_message}'")
        print(f"üóëÔ∏è –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (message_id - 1)")
        print(f"üóëÔ∏è –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
        print(f"üîÑ –ü–æ–≤—Ç–æ—Ä—è–µ–º {iterations} —Ä–∞–∑")
        print("-" * 50)

        try:
            for i in range(iterations):
                try:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    sent_message = await self.bot.send_message(
                        chat_id=chat_id, text=f"{test_message} ({i+1}/{iterations})"
                    )

                    current_message_id = sent_message.message_id
                    previous_message_id = current_message_id - 1

                    logger.debug(f"üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ {current_message_id}")
                    sent_messages.append(current_message_id)

                    # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º
                    await asyncio.sleep(0.1)

                    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (message_id - 1)
                    previous_deleted = await self.delete_message_safely(
                        chat_id, previous_message_id
                    )
                    if previous_deleted:
                        deleted += 1
                        logger.debug(
                            f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ {previous_message_id}"
                        )

                    # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    current_deleted = await self.delete_message_safely(
                        chat_id, current_message_id
                    )
                    if current_deleted:
                        deleted += 1
                        logger.debug(
                            f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ {current_message_id}"
                        )

                        # –£–±–∏—Ä–∞–µ–º –∏–∑ —Å–ø–∏—Å–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö, —Ç–∞–∫ –∫–∞–∫ —É–¥–∞–ª–∏–ª–∏
                        if current_message_id in sent_messages:
                            sent_messages.remove(current_message_id)

                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
                    if (i + 1) % 10 == 0:
                        logger.info(
                            f"üìà –ò—Ç–µ—Ä–∞—Ü–∏—è {i+1}/{iterations}, —É–¥–∞–ª–µ–Ω–æ: {deleted}"
                        )

                    # –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∏—Ç–µ—Ä–∞—Ü–∏—è–º–∏
                    await asyncio.sleep(0.5)

                except Exception as e:
                    logger.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –Ω–∞ –∏—Ç–µ—Ä–∞—Ü–∏–∏ {i+1}: {e}")
                    continue

        except KeyboardInterrupt:
            current_iteration = locals().get("i", -1) + 1
            logger.warning(
                f"‚èπÔ∏è –£–º–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–∞ –∏—Ç–µ—Ä–∞—Ü–∏–∏ {current_iteration}"
            )

            # –ü—ã—Ç–∞–µ–º—Å—è –æ—á–∏—Å—Ç–∏—Ç—å –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            if sent_messages:
                print(
                    f"\nüßπ –û—á–∏—Å—Ç–∫–∞ {len(sent_messages)} –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π..."
                )
                for msg_id in sent_messages:
                    try:
                        success = await self.delete_message_safely(chat_id, msg_id)
                        if success:
                            deleted += 1
                    except Exception as e:
                        logger.debug(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è {msg_id}: {e}")
                        continue

            print("\n" + "=" * 50)
            print("‚èπÔ∏è –£–ú–ù–û–ï –£–î–ê–õ–ï–ù–ò–ï –ü–†–ï–†–í–ê–ù–û")
            print("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ù–ê –ú–û–ú–ï–ù–¢ –ü–†–ï–†–´–í–ê–ù–ò–Ø:")
            print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {deleted}")
            print(f"üîÑ –í—ã–ø–æ–ª–Ω–µ–Ω–æ –∏—Ç–µ—Ä–∞—Ü–∏–π: {current_iteration}/{iterations}")
            print("=" * 50)

            return deleted

        # –û—á–∏—Å—Ç–∫–∞ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–µ—Å–ª–∏ –µ—Å—Ç—å)
        if sent_messages:
            logger.info(
                f"üßπ –û—á–∏—Å—Ç–∫–∞ {len(sent_messages)} –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π..."
            )
            for msg_id in sent_messages:
                try:
                    success = await self.delete_message_safely(chat_id, msg_id)
                    if success:
                        deleted += 1
                except Exception as e:
                    logger.debug(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è {msg_id}: {e}")
                    continue

        logger.info(
            f"üèÅ –£–º–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}. –£–¥–∞–ª–µ–Ω–æ: {deleted}"
        )

        print("\n" + "=" * 50)
        print("üß† –£–ú–ù–û–ï –£–î–ê–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
        print("üìä –§–ò–ù–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {deleted}")
        print(f"üîÑ –í—ã–ø–æ–ª–Ω–µ–Ω–æ –∏—Ç–µ—Ä–∞—Ü–∏–π: {iterations}")
        efficiency = (deleted / (iterations * 2)) * 100 if iterations > 0 else 0
        print(f"‚ö° –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {efficiency:.1f}% (–æ—Ç —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–∞–∫—Å–∏–º—É–º–∞)")
        print("üí° –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: —É–¥–∞–ª—è—é—Ç—Å—è –∫–∞–∫ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ, —Ç–∞–∫ –∏ –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
        print("=" * 50)

        return deleted

    async def search_and_delete_messages_in_range(
        self,
        chat_id: int,
        search_text: str,
        start_message_id: int = 1,
        end_message_id: int = 10000,
        max_attempts: int = 100,
    ) -> int:
        """
        –ü—ã—Ç–∞–µ—Ç—Å—è –Ω–∞–π—Ç–∏ –∏ —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ ID

        –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç –º–µ—Ç–æ–¥–æ–º –ø—Ä–æ–± –∏ –æ—à–∏–±–æ–∫, —Ç–∞–∫ –∫–∞–∫ Telegram Bot API
        –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
        """
        deleted = 0
        attempts = 0

        logger.info(f"üîç –ü–æ–∏—Å–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ç–µ–∫—Å—Ç–æ–º '{search_text}' –≤ —á–∞—Ç–µ {chat_id}")
        logger.info(f"üìç –î–∏–∞–ø–∞–∑–æ–Ω message_id: {start_message_id}-{end_message_id}")

        # –ü—Ä–æ–±—É–µ–º —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ (–Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–º–µ—é—Ç –±–æ–ª—å—à–∏–π ID)
        for message_id in range(end_message_id, start_message_id - 1, -1):
            if attempts >= max_attempts:
                logger.info(
                    f"‚èπÔ∏è –î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –ø–æ–ø—ã—Ç–æ–∫ ({max_attempts}) –¥–ª—è —á–∞—Ç–∞ {chat_id}"
                )
                break

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ—Å–ª–µ –ø–µ—Ä–≤—ã—Ö –ø–æ–ø—ã—Ç–æ–∫
            if attempts > 0 and chat_id in self.blocked_users:
                logger.warning(
                    f"‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è {chat_id} (—á–∞—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)"
                )
                break

            try:
                # –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
                success = await self.delete_message_safely(chat_id, message_id)
                if success:
                    deleted += 1
                    logger.info(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ {message_id} –≤ —á–∞—Ç–µ {chat_id}")

                attempts += 1

                # –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏
                await asyncio.sleep(0.2)

            except Exception as e:
                logger.debug(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è {message_id}: {e}")
                attempts += 1
                continue

        logger.info(
            f"üèÅ –ó–∞–≤–µ—Ä—à–µ–Ω –ø–æ–∏—Å–∫ –≤ —á–∞—Ç–µ {chat_id}. –£–¥–∞–ª–µ–Ω–æ: {deleted}, –ø–æ–ø—ã—Ç–æ–∫: {attempts}"
        )
        return deleted

    async def delete_messages_for_all_users(
        self,
        search_text: Optional[str] = None,
        message_ids: Optional[List[int]] = None,
        message_id_range: Optional[tuple] = None,
    ):
        """
        –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

        Args:
            search_text: –¢–µ–∫—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å message_id_range)
            message_ids: –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ ID —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
            message_id_range: –ö–æ—Ä—Ç–µ–∂ (start_id, end_id) –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
        """
        users = await self.get_all_users()

        logger.info(f"üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")

        if search_text and message_id_range:
            logger.info(
                f"üéØ –†–µ–∂–∏–º: –ü–æ–∏—Å–∫ –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ç–µ–∫—Å—Ç–æ–º '{search_text}'"
            )
            logger.info(f"üìç –î–∏–∞–ø–∞–∑–æ–Ω ID: {message_id_range[0]}-{message_id_range[1]}")
        elif message_ids:
            logger.info(f"üéØ –†–µ–∂–∏–º: –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π {message_ids}")
        else:
            logger.error("‚ùå –ù–µ —É–∫–∞–∑–∞–Ω —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã!")
            return

        for i, user in enumerate(users, 1):
            logger.info(
                f"üë§ [{i}/{len(users)}] –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id} (@{user.username})"
            )

            # –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —á–∞—Ç–∞
            user_id = int(user.id)  # –Ø–≤–Ω–æ–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —Ç–∏–ø–∞ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –æ—à–∏–±–æ–∫ –ª–∏–Ω—Ç–µ—Ä–∞
            if not await self.check_chat_availability(user_id):
                logger.info(f"‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} (—á–∞—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)")
                continue

            try:
                if message_ids:
                    # –£–¥–∞–ª—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                    await self.delete_messages_by_ids(user_id, message_ids)

                elif search_text and message_id_range:
                    # –ò—â–µ–º –∏ —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ
                    await self.search_and_delete_messages_in_range(
                        user_id, search_text, message_id_range[0], message_id_range[1]
                    )

                # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
                await asyncio.sleep(1)

            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
                continue

        # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        logger.info("\n" + "=" * 50)
        logger.info("üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        logger.info(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {self.deleted_count}")
        logger.info(f"‚ùå –û—à–∏–±–æ–∫: {self.error_count}")
        logger.info(f"üö´ –ù–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(self.blocked_users)}")
        logger.info(f"üí¨ –ß–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: {self.chat_not_found_count}")
        if self.blocked_users:
            logger.info(
                f"üö´ ID –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {self.blocked_users[:10]}{'...' if len(self.blocked_users) > 10 else ''}"
            )
        logger.info("=" * 50)

    async def close(self):
        """–ó–∞–∫—Ä—ã–≤–∞–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–æ—Ç–æ–º"""
        await self.bot.session.close()


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞"""

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
    if not BOT_TOKEN:
        logger.error(
            "‚ùå –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN"
        )
        return

    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —É–¥–∞–ª–∏—Ç–µ–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π
    deleter = MessageDeleter(BOT_TOKEN)

    try:
        print("ü§ñ –°–∫—Ä–∏–ø—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –±–æ—Ç–∞")
        print("=" * 50)
        print("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:")
        print("1. –£–¥–∞–ª–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ ID")
        print("2. –ù–∞–π—Ç–∏ –∏ —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ ID")
        print("3. –ë—ã—Å—Ç—Ä–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ - —É–∫–∞–∑–∞—Ç—å —Ç–µ–∫—Å—Ç –∏ –ø—Ä–∏–º–µ—Ä–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω")
        print("4. –£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —É –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–±–µ–∑ –ª–∏–º–∏—Ç–∞)")
        print("5. –£–º–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ: –æ—Ç–ø—Ä–∞–≤–∫–∞ + —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∏ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è")

        choice = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ä–µ–∂–∏–º–∞ (1-5): ").strip()

        if choice == "1":
            # –†–µ–∂–∏–º —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
            message_ids_str = input("–í–≤–µ–¥–∏—Ç–µ ID —Å–æ–æ–±—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é: ").strip()
            message_ids = [
                int(x.strip())
                for x in message_ids_str.split(",")
                if x.strip().isdigit()
            ]

            if not message_ids:
                logger.error("‚ùå –ù–µ —É–∫–∞–∑–∞–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ ID —Å–æ–æ–±—â–µ–Ω–∏–π")
                return

            confirm = (
                input(
                    f"‚ö†Ô∏è –£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è {message_ids} —É –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π? (–¥–∞/–Ω–µ—Ç): "
                )
                .strip()
                .lower()
            )
            if confirm not in ["–¥–∞", "yes", "y"]:
                logger.info("‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
                return

            await deleter.delete_messages_for_all_users(message_ids=message_ids)

        elif choice == "2":
            # –†–µ–∂–∏–º –ø–æ–∏—Å–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ —Ç–µ–∫—Å—Ç—É
            search_text = input(
                "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–ü–æ–±–µ–¥–∏—Ç–µ–ª—å: —á–µ–∫ ‚Ññ 27'): "
            ).strip()
            if not search_text:
                logger.error("‚ùå –ù–µ —É–∫–∞–∑–∞–Ω —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞")
                return

            start_id = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞—á–∞–ª—å–Ω—ã–π message_id (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1): ").strip()
            start_id = int(start_id) if start_id.isdigit() else 1

            end_id = input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω–µ—á–Ω—ã–π message_id (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1000): ").strip()
            end_id = int(end_id) if end_id.isdigit() else 1000

            confirm = (
                input(
                    f"‚ö†Ô∏è –ò—Å–∫–∞—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–µ–∫—Å—Ç–æ–º '{search_text}' –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ {start_id}-{end_id}? (–¥–∞/–Ω–µ—Ç): "
                )
                .strip()
                .lower()
            )
            if confirm not in ["–¥–∞", "yes", "y"]:
                logger.info("‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
                return

            await deleter.delete_messages_for_all_users(
                search_text=search_text, message_id_range=(start_id, end_id)
            )

        elif choice == "3":
            # –ë—ã—Å—Ç—Ä—ã–π —Ä–µ–∂–∏–º –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è—Ö
            search_text = input(
                "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é '–ü–æ–±–µ–¥–∏—Ç–µ–ª—å: —á–µ–∫ ‚Ññ'): "
            ).strip()
            if not search_text:
                search_text = "–ü–æ–±–µ–¥–∏—Ç–µ–ª—å: —á–µ–∫ ‚Ññ"

            print(f"üéØ –ë—É–¥–µ–º –∏—Å–∫–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–µ–∫—Å—Ç–æ–º: '{search_text}'")
            print(
                "üìç –î–∏–∞–ø–∞–∑–æ–Ω –ø–æ–∏—Å–∫–∞: –ø–æ—Å–ª–µ–¥–Ω–∏–µ 500 —Å–æ–æ–±—â–µ–Ω–∏–π (ID –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ-500 –¥–æ —Ç–µ–∫—É—â–µ–≥–æ)"
            )

            confirm = input("‚ö†Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (–¥–∞/–Ω–µ—Ç): ").strip().lower()
            if confirm not in ["–¥–∞", "yes", "y"]:
                logger.info("‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
                return

            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∏–º–µ—Ä–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–µ–¥–∞–≤–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
            # –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∏–∞–ø–∞–∑–æ–Ω
            await deleter.delete_messages_for_all_users(
                search_text=search_text, message_id_range=(1, 500)  # –ü—Ä–∏–º–µ—Ä–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω
            )

        elif choice == "4":
            # –†–µ–∂–∏–º —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —É –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_id_str = input("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ").strip()
            if not user_id_str.isdigit():
                logger.error("‚ùå ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º")
                return

            user_id = int(user_id_str)

            # –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ –æ –ø–æ–∏—Å–∫–µ –ø–æ —Ç–µ–∫—Å—Ç—É
            print(
                "‚ÑπÔ∏è –í–ê–ñ–ù–û: –í –¥–∞–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ —É–¥–∞–ª—è—é—Ç—Å—è –í–°–ï —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ."
            )
            print(
                "‚ÑπÔ∏è Telegram Bot API –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º."
            )

            # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞
            print("üìç –î–∏–∞–ø–∞–∑–æ–Ω –ø–æ–∏—Å–∫–∞:")
            print("1. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é (1-50000)")
            print("2. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≤—Ä—É—á–Ω—É—é")

            range_choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é (1-2): ").strip()

            if range_choice == "2":
                start_id = input(
                    "–í–≤–µ–¥–∏—Ç–µ –Ω–∞—á–∞–ª—å–Ω—ã–π message_id (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1): "
                ).strip()
                start_id = int(start_id) if start_id.isdigit() else 1

                end_id = input(
                    "–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω–µ—á–Ω—ã–π message_id (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 50000): "
                ).strip()
                end_id = int(end_id) if end_id.isdigit() else 50000
            else:
                start_id = 1
                end_id = 50000

            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            confirm = (
                input(
                    f"‚ö†Ô∏è –£–¥–∞–ª–∏—Ç—å –í–°–ï —Å–æ–æ–±—â–µ–Ω–∏—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ {start_id}-{end_id}? (–¥–∞/–Ω–µ—Ç): "
                )
                .strip()
                .lower()
            )

            if confirm not in ["–¥–∞", "yes", "y"]:
                logger.info("‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
                return

            # –í—ã–ø–æ–ª–Ω—è–µ–º —É–¥–∞–ª–µ–Ω–∏–µ
            print(f"üöÄ –ù–∞—á–∏–Ω–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –í–°–ï–• —Å–æ–æ–±—â–µ–Ω–∏–π —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}...")
            print("‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏!")
            print("‚èπÔ∏è –î–ª—è –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Ctrl+C")
            print("üìä –ü—Ä–æ–≥—Ä–µ—Å—Å –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –∫–∞–∂–¥—ã–µ 500 –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π")
            print("-" * 60)

            deleted = await deleter.delete_all_messages_for_user(
                chat_id=user_id, start_message_id=start_id, end_message_id=end_id
            )

            print(f"\n‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
            print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {deleted}")

        elif choice == "5":
            # –†–µ–∂–∏–º —É–º–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
            user_id_str = input("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ").strip()
            if not user_id_str.isdigit():
                logger.error("‚ùå ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º")
                return

            user_id = int(user_id_str)

            # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
            iterations_str = input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Ç–µ—Ä–∞—Ü–∏–π (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 100): ").strip()
            iterations = int(iterations_str) if iterations_str.isdigit() else 100

            test_message = input(
                "–¢–µ–∫—Å—Ç —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è (–∏–ª–∏ Enter –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ): "
            ).strip()
            if not test_message:
                test_message = "üßπ –û—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞..."

            print("\nüí° –ö–ê–ö –†–ê–ë–û–¢–ê–ï–¢ –£–ú–ù–û–ï –£–î–ê–õ–ï–ù–ò–ï:")
            print("1. üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
            print("2. üìç –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –µ–≥–æ message_id")
            print("3. üóëÔ∏è –£–¥–∞–ª—è–µ—Ç—Å—è –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (message_id - 1)")
            print("4. üóëÔ∏è –£–¥–∞–ª—è–µ—Ç—Å—è —Ç–µ–∫—É—â–µ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
            print("5. üîÑ –ü—Ä–æ—Ü–µ—Å—Å –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è N —Ä–∞–∑")
            print(f"\nüìä –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:")
            print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_id}")
            print(f"üîÑ –ò—Ç–µ—Ä–∞—Ü–∏–π: {iterations}")
            print(f"üí¨ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: '{test_message}'")
            print(f"‚è±Ô∏è –¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–π –º–∞–∫—Å–∏–º—É–º —É–¥–∞–ª–µ–Ω–∏–π: {iterations * 2}")

            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            confirm = (
                input(
                    f"\n‚ö†Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å —É–º–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}? (–¥–∞/–Ω–µ—Ç): "
                )
                .strip()
                .lower()
            )

            if confirm not in ["–¥–∞", "yes", "y"]:
                logger.info("‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
                return

            # –í—ã–ø–æ–ª–Ω—è–µ–º —É–º–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ
            print(f"\nüß† –ó–∞–ø—É—Å–∫–∞–µ–º —É–º–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}...")
            print("‚èπÔ∏è –î–ª—è –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Ctrl+C")
            print("-" * 60)

            deleted = await deleter.smart_delete_for_user(
                chat_id=user_id, iterations=iterations, test_message=test_message
            )

            print(f"\n‚úÖ –£–º–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
            print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {deleted}")

        else:
            logger.error("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞")
            return

    except KeyboardInterrupt:
        logger.info("‚èπÔ∏è –°–∫—Ä–∏–ø—Ç –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        await deleter.close()


if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
    asyncio.run(main())
